
## Tests datas for Jekyll and tags (Liquid, Kramdown, ...)

#level 1
#    level 2
#        level 3
#            item:

#                doc: 'url' Optional
#                comment: comment about test result, link to other doc or bug report ...
#                tests:
#
#                  - tag: '{{ anytag }}'

#                    expected: 'expected html response'

#                    nl2space: true # if true replace newlines to spaces (+trim) before comparing strings
                                    # default to false

liquid:

    basics:

        operators:
            contains:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/basics/operators#contains'
                tests:
                  - tag: '{% if "Hello world !" contains "Hello" %}contains{% else %}not found{% endif %}'
                    expected: contains
                  - tag: '{% if "Hello world !" contains "Jelyll" %}contains{% else %}not found{% endif %}'
                    expected: not found

                  - tag: '{% assign my_array = "one|two|three" | split: "|" %}{% if my_array contains "one" %}contains{% else %}not found{% endif %}'
                    expected: contains
                  - tag: '{% assign my_array = "one|two|three" | split: "|" %}{% if my_array contains "four" %}contains{% else %}not found{% endif %}'
                    expected: not found

        types:
            array:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/basics/types#arrays'
                tests:
                  - tag: '{% assign my_array = "one|two|three" | split: "|" %}{% for num in my_array %}{{ num }}{% endfor %}'
                    expected: onetwothree

                  - tag: '{% assign my_array = "one|two|three" | split: "|" %}{{ my_array[0] }}{{ my_array[1] }}{{ my_array[2] }}'
                    expected: onetwothree

    tags:

        control-flow:
            if:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/tags/control-flow-tags#if'
                tests:
                  - tag: '{% if 1 == 1 %}OK{% endif %}'
                    expected: 'OK'
                  - tag: '{% if 1 == "1" %}OK{% endif %}'
                    expected: ''

            elsif-else:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/tags/control-flow-tags#elsif-else'
                tests:
                  - tag: '{% assign name="toto" %}{% if name == "toto" %}toto{% elsif name == "titi" %}titi{% else %}nobody{% endif %}'
                    expected: 'toto'
                  - tag: '{% assign name="titi" %}{% if name == "toto" %}toto{% elsif name == "titi" %}titi{% else %}nobody{% endif %}'
                    expected: 'titi'
                  - tag: '{% assign name="yoyo" %}{% if name == "toto" %}toto{% elsif name == "titi" %}titi{% else %}nobody{% endif %}'
                    expected: 'nobody'

            case-when:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/tags/control-flow-tags#case-when'
                tests:
                  - tag: "{% assign handle = 'cake' %}{% case handle %}{% when 'cake' %}This is a cake{% when 'cookie' %}This is a cookie{% else %}This is not a cake nor a cookie{% endcase %}"
                    expected: 'This is a cake'
                  - tag: "{% assign handle = 'cookie' %}{% case handle %}{% when 'cake' %}This is a cake{% when 'cookie' %}This is a cookie{% else %}This is not a cake nor a cookie{% endcase %}"
                    expected: 'This is a cookie'
                  - tag: "{% assign handle = 'bacon' %}{% case handle %}{% when 'cake' %}This is a cake{% when 'cookie' %}This is a cookie{% else %}This is not a cake nor a cookie{% endcase %}"
                    expected: 'This is not a cake nor a cookie'

            unless:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/tags/control-flow-tags#unless'
                tests:
                  - tag: "{% assign name='toto' %}{% unless name == 'titi' %}Not {% endunless %}titi"
                    expected: 'Not titi'
                  - tag: "{% assign name='titi' %}{% unless name == 'titi' %}Not{% endunless %}titi"
                    expected: 'titi'


        theme:
            comment:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/tags/theme-tags#comment'
                tests:
                  - tag: 'My name is {% comment %}NOT{% endcomment %}Titi.'
                    expected: 'My name is Titi.'

            include:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/tags/theme-tags#include'
                tests:

                  - desc: simple include
                    tag: '{% include test_en.html %}'
                    expected: 'english include'
                    nl2space: true

                  - desc: include with file name in a variable
                    tag: '{% assign tpl = "test_en.html" %}{% include {{ tpl }} %}'
                    expected: 'english include'
                    nl2space: true

                  - desc: include with "dynamic" file name concatenation
                    tag: '{% assign lang = "en" %}{% capture filename %}test_{{ lang }}.html{% endcapture %}{% include {{filename}} %}'
                    expected: 'english include'
                    nl2space: true

                  - desc: include with "dynamic" file name concatenation in include tag
                    tag: '{% assign lang = "en" %}{% include test_{{ lang }}.html %}'
                    comment: 'Jekyll 2.3 - Only one variable tag is allowed in the include tag.'
                    expected: 'english include'
                    nl2space: true
                    exception: true

                  - desc: include calling variable defined in parent template
                    tag: '{% assign name = "titi" %}{% include test_include.html %}'
                    expected: 'titi'
                    nl2space: true

#            raw:
#              doc: 'http://docs.shopify.com/themes/liquid-documentation/tags/theme-tags#raw'
#              tests:
#                  - desc: insert and render Liquid tag as is in content
#                    tag: '{% raw %}{{ 5 | plus: 6 }}{% endraw %}'
#                    expected: '{{ 5 | plus: 6 }}'


# don't forget {% break %}



    objects:

        forloop:

            forloop.first:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/objects/for-loops#first'
              tests:
                - tag: '{% for num in site.tests.multi-dim-array.arrayone %}{% if forloop.first == true %}{{ num }}{% else %}-{% endif %}{% endfor %}'
                  expected: 'one--'

            forloop.index:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/objects/for-loops#index'
              tests:
                - tag: '{% for num in site.tests.multi-dim-array.arrayone %}{{ forloop.index }}{% endfor %}'
                  expected: '123'

            forloop.index0:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/objects/for-loops#index0'
              tests:
                - tag: '{% for num in site.tests.multi-dim-array.arrayone %}{{ forloop.index0 }}{% endfor %}'
                  expected: '012'

            forloop.last:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/objects/for-loops#last'
              tests:
                - tag: '{% for num in site.tests.multi-dim-array.arrayone %}{% if forloop.last == true %}{{ num }}{% else %}-{% endif %}{% endfor %}'
                  expected: '--three'

            forloop.rindex:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/objects/for-loops#rindex'
              tests:
                - tag: '{% for num in site.tests.multi-dim-array.arrayone %}{{ forloop.rindex }}{% endfor %}'
                  expected: '321'

            forloop.rindex0:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/objects/for-loops#rindex0'
              tests:
                - tag: '{% for num in site.tests.multi-dim-array.arrayone %}{{ forloop.rindex0 }}{% endfor %}'
                  expected: '210'

            forloop.length:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/objects/for-loops#length'
              tests:
                - tag: '{% for num in site.tests.multi-dim-array.arrayone %}{% capture length %}{{ forloop.length }}{% endcapture %}{% endfor %}{{ length }}'
                  expected: 3

#        paginate:
#
#            paginate.current_page:
#              doc: 'http://docs.shopify.com/themes/liquid-documentation/objects/paginate#paginate-current_page'
#              tests:
#                - tag: '@TODO'
#                  expected: 'TODO'

    filters:

        array:
            join:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/array-filters#join'
                tests:
                  - tag: '{% assign my_array = "one|two|three" | split: "|" | join: ", " %}{{ my_array }}'
                    expected: 'one, two, three'

            first:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/array-filters#first'
                tests:
                  - tag: '{{ "one|two|three" | split: "|" | first }}'
                    expected: 'one'
                  - tag: '{% assign my_array = "one|two|three" | split: "|" %}{{ my_array.first }}'
                    comment: 'first can be used in dot notation, in cases where it needs to be used inside a tag.'
                    expected: 'one'

            last:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/array-filters#last'
                tests:
                  - tag: '{{ "one|two|three" | split: "|" | last }}'
                    expected: 'three'
                  - tag: '{% assign my_array = "one|two|three" | split: "|" %}{{ my_array.last }}'
                    comment: 'last can be used in dot notation, in cases where it needs to be used inside a tag.'
                    expected: 'three'

            map:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/array-filters#map'
                tests:
                  - tag: '{% assign mapping = site.tests.multi-dim-array | map: "arrayone" %}{{ mapping }}'
                    expected: 'onetwothree'

            size:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/array-filters#size'
                tests:
                  - tag: '{{ "this is a 30 character string!" | size }}'
                    expected: 30

                  - tag: '{{ "one|two|three" | split: "|" | size }}'
                    expected: 3

            sort:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/array-filters#sort'
                tests:
                  - tag: '{% assign posts = site.tests.posts | sort: "weight" %}{% for post in posts %}{{ post.weight }}{% endfor %}'
                    comment: this filter is overriden by Jekyll sort
                    expected: '102030'

                  - tag: '{% assign posts = site.tests.posts | sort: "title" %}{% for post in posts %}{{ post.title }}{% endfor %}'
                    comment: this filter is overriden by Jekyll sort
                    expected: 'ABab'

            push:
                doc:
                tests:
                  - tag: '{% assign my_array = "one|two" | split: "|" %}{{ my_array | push: "three" }}'
                    comment: Jekyll 2.4 specific
                    expected: 'onetwothree'

            pop:
                doc:
                tests:
                  - tag: '{% assign my_array = "one|two|three" | split: "|" %}{{ my_array | pop }}'
                    comment: Jekyll 2.4 specific
                    expected: 'onetwo'

                  - tag: '{% assign my_array = "one|two|three" | split: "|" %}{{ my_array | pop: 2 }}'
                    comment: Jekyll 2.4 specific
                    expected: 'one'

            shift:
                doc:
                tests:
                  - tag: '{% assign my_array = "one|two|three" | split: "|" %}{{ my_array | shift }}'
                    comment: Jekyll 2.4 specific
                    expected: 'twothree'

                  - tag: '{% assign my_array = "one|two|three" | split: "|" %}{{ my_array | shift: 2 }}'
                    comment: Jekyll 2.4 specific
                    expected: 'three'

            unshift:
                doc:
                tests:
                  - tag: '{% assign my_array = "one|two" | split: "|" %}{{ my_array | unshift: "three" }}'
                    comment: Jekyll 2.4 specific
                    expected: 'threeonetwo'

        math:

            ceil:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/math-filters#ceil'
                tests:
                  - tag: '{{ 4.6 | ceil }}'
                    comment: liquid 3.0
                    expected: 5

            divided_by:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/math-filters#divided_by'

                tests:
                  - tag: '{{ 6 | divided_by: 3 }}'
                    expected: 2

                  - tag: '{{ 3 | divided_by: 5 }}'
                    expected: 0
                    comment: integers division returns integer
                  - tag: '{{ "3" | divided_by: 5 }}'
                    expected: 0
                    comment: integers division returns integer

                  - tag: '{{ "3.0" | divided_by: 5 }}'
                    expected: 0.6
                  - tag: '{{ 3.0 | divided_by: 5 }}'
                    expected: 0.6

                  - tag: '{{ "3" | divided_by: 5.0 }}'
                    expected: 0.6
                  - tag: '{{ 3 | divided_by: "5.0" }}'
                    expected: 0.6

            floor:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/math-filters#floor'
                tests:
                  - tag: '{{ 4.6 | floor }}'
                    comment: liquid 3.0
                    expected: 4

            minus:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/math-filters#minus'
                tests:
                  - tag: '{{ 16 | minus: 15 }}'
                    expected: 1
                  - tag: '{{ "16" | minus: 15 }}'
                    expected: 1
                  - tag: '{{ 16 | minus: "15" }}'
                    expected: 1

                  - tag: '{{ 1 | minus: 0.5 }}'
                    expected: 0.5
                  - tag: '{{ 1 | minus: "0.5" }}'
                    expected: 0.5
                  - tag: '{{ "1" | minus: 0.5 }}'
                    expected: 0.5

            plus:
                doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/math-filters#plus'
                tests:
                  - tag: '{{ 16 | plus: 15 }}'
                    expected: 31
                  - tag: '{{ "16" | plus: 15 }}'
                    expected: 31
                  - tag: '{{ 16 | plus: "15" }}'
                    expected: 31

                  - tag: '{{ 1.6 | plus: 1.5 }}'
                    expected: 3.1
                  - tag: '{{ "1.6" | plus: 1.5 }}'
                    expected: 3.1
                  - tag: '{{ 1.6 | plus: "1.5" }}'
                    expected: 3.1

            round:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/math-filters#round'

              tests:
                - tag: '{{ 4.6 | round }}'
                  comment: liquid 3.0
                  expected: 5
                - tag: '{{ 4.3 | round }}'
                  comment: liquid 3.0
                  expected: 4
                - tag: '{{ 4.5612 | round: 2 }}'
                  comment: liquid 3.0
                  expected: 4,56

            times:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/math-filters#times'
              tests:
                - tag: '{{ 100 | times: 2 }}'
                  expected: 200
                - tag: '{{ 10.12 | times: 10 }}'
                  expected: 101.2
                - tag: '{{ 10 | times: 10.12 }}'
                  expected: 101.2

            modulo:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/math-filters#modulo'
              tests:
                - tag: '{{ 12 | modulo: 5 }}'
                  expected: 2
                - tag: '{{ "12" | modulo: 5 }}'
                  expected: 2
                - tag: '{{ 12 | modulo: "5" }}'
                  expected: 2
                - tag: '{{ 1.2 | modulo: 5 }}'
                  expected: 1.2
                - tag: '{{ 15.5 | modulo: 5.1 }}'
                  expected: 0.2

        string:

            append:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#append'
              tests:
               - tag: "{{ 'sales' | append: '.jpg' }}"
                 expected: 'sales.jpg'

            capitalize:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#capitalize'
              tests:
               - tag: "{{ 'capitalize me' | capitalize }}"
                 expected: 'Capitalize me'

            downcase:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#downcase'
              tests:
               - tag: "{{ 'UPPERCASE' | downcase }}"
                 expected: 'uppercase'

            escape:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#escape'
              tests:
               - tag: '{{ "<p>test</p>" | escape }}'
                 expected: '&lt;p&gt;test&lt;/p&gt;'

            newline_to_br:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#newline_to_br'
              tests:
               - tag: '{{ site.tests.string-with-newlines | newline_to_br | escape }}'
                 expected: |
                        One&lt;br /&gt;
                        Two&lt;br /&gt;
                        Three&lt;br /&gt;

            prepend:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#prepend'
              tests:
               - tag: "{{ 'sale' | prepend: 'Made a great ' }}"
                 expected: 'Made a great sale'

            remove:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#remove'
              tests:
               - tag: '{{ "Hello, world. Goodbye, world." | remove: "world" }}'
                 expected: 'Hello, . Goodbye, .'

            remove_first:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#remove_first'
              tests:
               - tag: '{{ "Hello, world. Goodbye, world." | remove_first: "world" }}'
                 expected: 'Hello, . Goodbye, world.'

            replace:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#replace'
              tests:
               - tag: "{{ 'Hello World !' | replace: 'World', 'Jekyll' }}"
                 expected: 'Hello Jekyll !'

            replace_first:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#replace_first'
              tests:
               - tag: "{{ 'Awesome Awesome Shoes' | replace_first: 'Awesome', 'Mega' }}"
                 expected: 'Mega Awesome Shoes'

            slice:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#slice'
              tests:
               - tag: '{{ "hello" | slice: 2 }}'
                 comment: liquid 3.0
                 expected: 'e'
               - tag: '{{ "hello" | slice: 1, 3 }}'
                 comment: liquid 3.0
                 expected: 'ell'
               - tag: '{{ "hello" | slice: -3, 2  }}'
                 comment: liquid 3.0
                 expected: 'el'

            split:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#split'
              tests:
               - tag: '{% assign words = "Uses cheat codes, calls the game boring." | split: " " %}{% for word in words %}{{ word }}{% endfor %}'
                 expected: 'Usescheatcodes,callsthegameboring.'

            strip:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#strip'
              tests:
               - tag: "|{{'   too many spaces      '|strip}}|"
                 comment: liquid 3.0
                 expected: '|too many spaces|'

            lstrip:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#lstrip'
              tests:
               - tag: "|{{ '   too many spaces           ' | lstrip }}|"
                 comment: liquid 3.0
                 expected: '|too many spaces           |'

            rstrip:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#rstrip'
              tests:
               - tag: "|{{ '   too many spaces           ' | rstrip }}|"
                 comment: liquid 3.0
                 expected: '|   too many spaces|'

            strip_html:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#strip_html'
              tests:
               - tag: '{{ "<h1>Hello</h1> World" | strip_html }}'
                 expected: 'Hello World'

            strip_newlines:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#strip_newlines'
              tests:
               - tag: '{{ site.tests.string-with-newlines | strip_newlines }}'
                 expected: 'OneTwoThree'

            truncate:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#truncate'
              tests:
               - tag: '{{ "The cat came back the very next day" | truncate: 10 }}'
                 expected: 'The cat...'

            truncatewords:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#truncatewords'
              tests:
               - tag: '{{ "The cat came back the very next day" | truncatewords: 4 }}'
                 expected: 'The cat came back...'

            upcase:
              doc: 'http://docs.shopify.com/themes/liquid-documentation/filters/string-filters#upcase'
              tests:
               - tag: "{{ 'i want this to be uppercase' | upcase }}"
                 expected: 'I WANT THIS TO BE UPPERCASE'

jekyll:

    filters:
        specific:

            date_to_xmlschema:
                doc: 'http://jekyllrb.com/docs/templates/#filters'
                tests:
                  - tag: '{{ "Fri, 07 Nov 2008 00:00:00 +0100" | date_to_xmlschema }}'
                    expected: '2008-11-07T00:00:00+01:00'

            date_to_rfc822:
                doc: 'http://jekyllrb.com/docs/templates/#filters'
                tests:
                  - tag: '{{ "2008-11-07T00:00:00+01:00" | date_to_rfc822 }}'
                    expected: 'Fri, 07 Nov 2008 00:00:00 +0100'

            date_to_string:
                doc: 'http://jekyllrb.com/docs/templates/#filters'
                tests:
                  - tag: '{{ "Fri, 07 Nov 2008 00:00:00 +0100" | date_to_string }}'
                    expected: '07 Nov 2008'

            date_to_long_string:
                doc: 'http://jekyllrb.com/docs/templates/#filters'
                tests:
                  - tag: '{{ "Fri, 07 Nov 2008 00:00:00 +0100" | date_to_long_string }}'
                    expected: '07 November 2008'

            where:
                doc: 'http://jekyllrb.com/docs/templates/#filters'
                tests:
                  - tag: '{% capture post %}{{ site.tests.posts | where:"weight", 10 }}{% endcapture %}{{ post }}'
                    comment: this filter need better testing
                    expected: '{"title"=>"a", "content"=>"a title body", "weight"=>10}'

            number_of_words:
                doc: 'http://jekyllrb.com/docs/templates/#filters'

                tests:
                  - tag: '{{ "three word sentence" | number_of_words }}'
                    expected: 3

            array_to_sentence_string:
                doc: 'http://jekyllrb.com/docs/templates/#filters'
                tests:
                  - tag: '{% assign my_array = "one|two|three" | split: "|" %}{{ my_array | array_to_sentence_string }}'
                    expected: 'one, two, and three'

            markdownify:
                doc: 'http://jekyllrb.com/docs/templates/#filters'
                tests:
                  - tag: '{{ "**strong** and *em*" | markdownify | escape }}'
                    comment: this test is passing. problem in the expected tag that adds a newline
                    expected: '{{ "<p><strong>strong</strong> and <em>em</em></p>" | escape }}'
                    nl2space: true

            jsonify:
                doc: 'http://jekyllrb.com/docs/templates/#filters'
                tests:
                  - tag: '{{ site.tests.posts[0] | jsonify }}'
                    expected: '{"title":"A","content":"A title body","weight":30}'

            sort:
                doc: 'http://jekyllrb.com/docs/templates/#filters'
                tests:
                  - tag: '{% assign posts = site.tests.posts | sort: "weight" %}{% for post in posts %}{{ post.title }}{% endfor %}'
                    expected: 'baBA'

                  - tag: '{% assign posts = site.tests.posts | sort: "weight", "last" %}{% for post in posts %}{{ post.title }}{% endfor %}'
                    expected: 'aBAb'

                  - tag: '{% assign posts = site.tests.posts | sort: "weight", "first" %}{% for post in posts %}{{ post.title }}{% endfor %}'
                    expected: 'baBA'

kramdown:

    config:

        gfm:

            multiple-underscores-in-words:

              doc: 'http://jekyllrb.com/docs/configuration/#kramdown'
              tests:
                - tag: '{{ "perform_complicated_task"  | markdownify }}'
                  comment: <a href="https://help.github.com/articles/github-flavored-markdown#multiple-underscores-in-words">Multiple underscores in words</a>
                  expected: |
                     <p>perform_complicated_task</p>

            url-autolinking:
              doc: 'http://jekyllrb.com/docs/configuration/#kramdown'
              tests:
                - tag: '{{ "http://example.com"  | markdownify }}'
                  comment: <a href="https://help.github.com/articles/github-flavored-markdown#url-autolinking">URL autolinking</a>
                  expected: '{{ <a href=>http://example.com</a> | escape }}'

            strikethrough:
              doc: 'http://jekyllrb.com/docs/configuration/#kramdown'
              tests:
                - tag: '{{ "~~Mistaken text.~~"  | markdownify }}'
                  comment: <a href="https://help.github.com/articles/github-flavored-markdown#strikethrough">Strikethrough</a>
                  expected: '{{ "<del>Mistaken text.</del>" | escape }}'

            fenced-code-blocks:
              doc: 'http://jekyllrb.com/docs/configuration/#kramdown'
              tests:
                - tag: >
                    {% capture tag %}
                    ```
                    function test() {
                      console.log("toto");
                    }
                    ```
                    {% endcapture %}
                    {{ tag  | markdownify }}

                  comment: <a href="https://help.github.com/articles/github-flavored-markdown#fenced-code-blocks">Fenced code blocks</a>
                  expected: '<p><code>function test() { console.log("toto"); }</code></p>'
                  nl2space: true


            syntax-highlighting:
              doc: 'http://jekyllrb.com/docs/configuration/#kramdown'
              tests:
                - tag: |
                    {% capture tag %}
                    ```ruby
                    def start
                      puts "toto"
                    end
                    ```
                    {% endcapture %}
                    {{ tag  | markdownify }}

                  comment: <a href="https://help.github.com/articles/github-flavored-markdown#syntax-highlighting">Syntax highlighting</a>
                  expected: '<pre><code class="language-ruby">def start puts "toto" end </code></pre>'
                  nl2space: true
